#include "p18f4550.inc"
CONFIG PBADEN = OFF    


udata_acs 0x00 
    TIME res 1	;VARIAVEL RESPONSAVEL POR GUARDAR O TEMPO
    
RES_VECT  CODE    0x0000            
    GOTO    START                   


MAIN_PROG CODE                      ; let linker place main program
 
START
 ;------------------------ HABILITANDO OS PINOS --------------------------------
    MOVLW 0x00	;HABILITA TODOS OS PINOS DA PORTA D PARA SAIDA 
    MOVWF TRISD		
    MOVLW 0x03
    MOVWF TRISB	;HABILITA OS PINOS RB0, RB1 PARA ENTRADA E RB4 PARA SAIDA
    
 ;--------------------------------PRINCIPAL-------------------------------------
   looprincipal
	BCF PORTB,RB4	;BUZZER INICIALMENTE DESLIGADO
	
	MOVLW 0x10	;INICIA O TIME EM 10MIN
	MOVWF TIME
	
	MOVLW 0x03  ;INICIALMENTE HABILITA O PINO RB1 (OS BOTÕES SW0 E SW1 )
	MOVWF TRISB 
	
	CALL INCREMENTO	;INCREMENTA AO APERTAR O BOTÃO SW0 E INICIA O CRONOMETRO
			;AO APERTAR O BOTÃO SW1 INICIA O CRONOMETRO
	
	MOVLW 0x01  ; DESABILITA O PINO RB1 (O BOTÃO SW0)
	MOVWF TRISB  
	
	CALL DECREMENTO ; INICIA O CRONOMETRO DECREMENTANDO A VARIAVEL TIME
	
	BSF PORTB,RB4    ;LIGA O BUZZER APOS O TEMPO CHEGAR EM ZERO
	CALL ATRASO	;TEMPO PARA FIZAR O BUZZER LIGADO
	
	CALL PAUSA ;ESPERA APERTAR ALGUM BOTÃO SW0 E SW1 PARA VOLTAR PARA O LOOP
    GOTO looprincipal  
    
 ;-------------------------------INCREMENTO-------------------------------------
    INCREMENTO
	MOVFF TIME,PORTD    ;EXIBE NO PORTD O VALOR DE TIME
	CALL ATRASO2	    ;ATRASO NECESSARIO PARA OBSERVAR O INCREMENTO
	btfss PORTB,RB0	    ;ANALISA SE O PINO SW0 FOI ACIONADO
	CALL ANALISE	    ;CASO SIM, CHAMA A FUNÇÃO PARA ANALISAR SE PODE 
			    ;INCREMENATAR EM TIME
	btfss PORTB,RB1	    ;ANALISA SE O BOTÃO SW1 FOI ACIONADO
	return		    ; SE FOR ACIONADO VOLTA PARA O LOOPRINCIPAL
    GOTO INCREMENTO	    ; CASO CONTRARIO, PERMANECE EM INCREMENTO
    
    ANALISE		    ;ANALISA SE O NUMERO É MAIOR QUE 60min
	MOVF TIME, W
	SUBLW 0x60
	BTFSS STATUS,Z
	GOTO ADD	    ;SE FOR MENOR, CHAMA A FUNÇÃO SOMA
    return
    
    ADD			    ;FUNÇÃO QUE SOMA AO TIME 10min

	MOVLW 0x10
	ADDWF TIME
    return 
    
 ;---------------------------------PAUSA----------------------------------------
 PAUSA		;ANALISA SE O USUARIO QUER INICIAR O CRONOMETRO
    CALL ATRASO2
    btfss PORTB,RB0 ; analisa se o pino RBO foi acionado
    return 
    btfss PORTB,RB1	; analisa se o pino RB1 foi acionado
    return
 GOTO PAUSA
 
 ;-------------------------DECREMENTA-------------------------------------------   
   DECREMENTO	    
	CALL DESCREMENTADISP1	;DECREMENTA EM DISP0
	CALL DECREMENTADISP0	;DECREMENTA EM DISP1
	MOVF TIME, W
	SUBLW 0x00
	BTFSS STATUS,Z		;ANALISA SE O TEMPO ESTÁ ZERADO
	GOTO DECREMENTO		;SE NÃO, CONTINUA DECREMENTANDO
   return			;SE SIM, RETORNE PARA A FUNÇÃO PRINCIPAL
   
   DESCREMENTADISP1		;DECREMENTA EM DISP1
	MOVLW 0x07
	SUBWF TIME
	MOVFF TIME, PORTD
    return
   
    DECREMENTADISP0		;DECREMENTA EM DISP0
	MOVFF TIME,PORTD
	CALL DELAY
    
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
	
	DECF TIME
	MOVFF TIME,PORTD
	CALL DELAY
    return   
   
 ;----------------------------------DELAY DE 1MIN-----------------------------   
    DELAY		     ;ATRASA 1min
	MOVLW .11
	MOVWF 0x04
	LOOPDELAY
	    CALL ATRASO1
	    CALL ATRASO1
	    CALL ATRASO1
	    CALL ATRASO1
	    CALL ATRASO1
	    decf 0x04
	bnz LOOPDELAY
    return
    
    ATRASO		    ;ATRASO DE 1ms
	MOVLW .255
	MOVWF 0x08
	    LOOP
	    NOP
	    NOP
	    NOP
	    decf 0x08
	bnz LOOP
    return
    
    ATRASO1		    ;ATRASA 1s
	MOVLW .113
	MOVWF 0x03
	LOOP2
	    CALL ATRASO
	    CALL ATRASO
	    CALL ATRASO
	    CALL ATRASO
	    CALL ATRASO
	    decf 0x03
	bnz LOOP2
    return
    
    ATRASO2		; ATRASA 500ms SEGUNDO
	MOVLW .40
	MOVWF 0x10
	LOOP3
	    CALL ATRASO
	    CALL ATRASO
	    CALL ATRASO
	    CALL ATRASO
	    CALL ATRASO
	    decf 0x10
	bnz LOOP3
    return
END